#!/bin/bash

function rmrdata() {
	if [ -e .RData ] ; then
		rm .RData
	fi
}

function popgen() {
	run="$1"
	rmrdata
	mpirun -n 1 --hostfile /mirror/.machinefile_single R --vanilla CMD BATCH popgen.R
	mv popgen.Rout logs/popgen-$run.Rout

}

function mv_rawdat() {
	run="$1"
	job="$2"
	mv subdat-$job.Rda rawdat/subdat-$run.$job.Rda
}

function estimater() {
	run="$1"
	job="$2"
	cp rawdat/subdat-$run.$job.Rda subdat.Rda

	rmrdata
	mpirun -n 1 --hostfile /mirror/.machinefile R --vanilla CMD BATCH estimate.R > /dev/null

	rm subdat.Rda

	cp sub_est.Rda estimates/sub_est-$run.$job.Rda

	mv estimate.Rout logs/estimate-$run.$job.Rout
}

function checkit() {
	run="$1"
	job="$2"

	cp estimates/sub_est-$run.$job.Rda ./sub_est.Rda

	rmrdata
	R --vanilla CMD BATCH checker.R

	mv SH_res.Rda     results/SH_res-$run.$job.Rda
	mv HO_res.Rda     results/HO_res-$run.$job.Rda
	mv HNG_res.Rda    results/HNG_res-$run.$job.Rda
	mv HNG_1_res.Rda  results/HNG_1_res-$run.$job.Rda
	mv LMS20_res.Rda  results/LMS20_res-$run.$job.Rda
	mv LMS30_res.Rda  results/LMS30_res-$run.$job.Rda

	mv checker.Rout logs/checker-$run.$job.Rout
}

function mkweldat() {

	echo -e "\nMake WelDat\n"
	rmrdata
	mpirun -n 1 --hostfile /mirror/.machinefile R --vanilla CMD BATCH mkweldat.R

	echo -e "\nDo Welcalc\n"
	rmrdata
	mpirun -n 1 --hostfile /mirror/.machinefile R --vanilla CMD BATCH welcalc.R

}

function mergedat() {

	echo -e "\nMerge Data"
	rmrdata
	mpirun -n 1 --hostfile /mirror/.machinefile R --vanilla CMD BATCH mergeres.R

}

rnum1=$(ls subdat* 2> /dev/null | wc -l)
rnum2=$(ls rawdat/subdat* 2> /dev/null | wc -l)
rnum=$((rnum1 + rnum2))
if [ $rnum -gt 0 ] ; then
	resume=1
	runstart=1
	for f in rawdat/subdat* ; do
		runstart="$f"
		break
	done
	runstart=${runstart##*subdat-}
	runstart=${runstart%%.*}
else
	resume=0
	runstart=1
fi

runstart=8
runs=20

for ((run=runstart ; run <= runs ; run++)) ; do

	if [ "$resume" == "0" ] ; then
		rm *.Rda *.Rout estimates/* logs/* merged/* rawdat/* results/* welcalc/* weldat/* &> /dev/null
	fi

	echo -e "\n"
	echo -e "==================="
	echo -e "Starting Run $run"
	echo -e "==================="
	echo -e "\nGenerating population\n"

	# Popgen checks for the files in the R script so resume is handled there always
	popgen $run

	dnum1=$(ls subdat* 2> /dev/null | wc -l)
	dnum2=$(ls rawdat/subdat* 2> /dev/null | wc -l)
	dnum=$((dnum1 + dnum2))
	jstart=$(( dnum2 + 1 ))

#	echo "jstart $jstart  dnum $dnum"

	for ((job=jstart ; job <= dnum ; job++)) ; do
		echo -e "\nMoving Raw Dat Job $job, of run $run\n"
		mv_rawdat $run $job
	done

	jstart=$(ls estimates/sub_est* 2> /dev/null | wc -l)
	jstart=$(( jstart + 1 ))

#	echo "jstart $jstart  dnum $dnum"

	for ((job=jstart ; job <= dnum ; job++)) ; do
		echo -e "\nEstimating Job $job, of run $run\n"
		estimater $run $job
	done

	dnum2=$(ls results/HO_res* 2> /dev/null | wc -l)
	jstart=$(( dnum2 + 1 ))

#	echo "jstart $jstart  dnum $dnum"

	for ((job=jstart ; job <= dnum ; job++)) ; do
		echo -e "\nChecking Job $job, of run $run\n"
		checkit $run $job
	done

	mkweldat

	mergedat

	7z a "all-$run.7z" merged estimates rawdat logs -mx9

	scp all-*.7z peanut:simdat/ && rm all-*

	resume=0

done

rm *.Rda *.Rout estimates/* logs/* merged/* rawdat/* results/* welcalc/* weldat/* &> /dev/null
